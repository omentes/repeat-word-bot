name: Actions

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer validate
        run: composer validate
      - name: Composer Install
        run: composer install --dev --no-interaction --no-ansi --prefer-dist --no-suggest --ignore-platform-reqs
      - name: PSR12 check
        run: php vendor/bin/phpcbf --standard=psr12 app -n tests -n
      - name: Psalm check
        run: php vendor/bin/psalm
      - name: Create env file
        run: |
          cp .env.github.actions .env
      - name: Build the docker-compose stack
        run: docker-compose -f docker-compose.github.actions.yml up -d
      - name: Sleep
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'
      - name: Build test suite
        run: |
          docker-compose -f docker-compose.github.actions.yml exec -T repeatt vendor/bin/codecept build
      - name: Run test suite
        run: |
          docker-compose -f docker-compose.github.actions.yml exec -T repeatt vendor/bin/doctrine orm:clear-cache:metadata 2> /dev/null | true
          docker-compose -f docker-compose.github.actions.yml exec -T repeatt vendor/bin/doctrine orm:clear-cache:query 2> /dev/null | true
          docker-compose -f docker-compose.github.actions.yml exec -T repeatt vendor/bin/doctrine orm:clear-cache:result 2> /dev/null | true
          docker-compose -f docker-compose.github.actions.yml exec -T repeatt vendor/bin/doctrine orm:generate-proxies 2> /dev/null | true
          docker-compose -f docker-compose.github.actions.yml exec -T repeatt vendor/bin/codecept build 2> /dev/null | true
          docker-compose -f docker-compose.github.actions.yml exec -T repeatt vendor/bin/codecept run --coverage-xml --xml

      #SONAR
      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v3
      # Analyse PR
      - name: Run sonarqube (analyse PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: sonar-scanner
          sonar.login=${{ secrets.SONAR_TOKEN }}
          sonar.organization=omentes
          sonar.host.url=https://sonarcloud.io/
          sonar.projectKey=omentes_repeat-word-bot
          sonar.exlusions=vendor
          sonar.pullrequest.branch=${{ github.head_ref }}
          sonar.pullrequest.key=${{ github.event.pull_request.number }}
          sonar.pullrequest.base=${{ github.base_ref }}
      # Analyse branch
      - name: Run sonarqube (analyse branch)
        if: ${{ github.event_name == 'push' }}
        run: sonar-scanner
          sonar.login=${{ secrets.SONAR_TOKEN }}
          sonar.organization=omentes
          sonar.host.url=https://sonarcloud.io/
          sonar.projectKey=omentes_repeat-word-bot
          sonar.exlusions=vendor